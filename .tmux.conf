##! disable mouse
#set -g mouse off

##! default color - green
set -g status-bg colour002

##! time for view display-message - 500ms
set -g display-time 500

##! 
#run-shell "bash ~/.var/dots/bin/set-tmux-colour.sh"

##! default shell
#set -g default-shell "/bin/zsh"
set -g terminal-overrides "xterm*:kLFT5=\eOD:kRIT5=\eOC:kUP5=\eOA:kDN5=\eOB:smkx@:rmkx@"

##! use vi like mode
setw -g mode-keys vi

# commend go on pipe
# bind -T root -n C-p pipe-pane -o 'cat >> ~/output.#I-#P' \; display "pipe output"

##! terminal title
set -g set-titles on
set -g set-titles-string "#S @ #H"

##! view status
#set -g status 2
set -s status-interval 1
set -g status-position top



##! window style
set -g window-style 'fg=colour249,bg=colour236'
set -g window-active-style 'fg=colour250,bg=black'
set -g window-status-format '#I:#W#F'
set -g window-status-current-style 'fg=#000000,bold,italics,underscore'
#set -g renumber-windows on
#set -g automatic-rename on
#set -g automatic-rename-format '#{pane_current_command}'

#####
##### for old Tmux
## default window title colors
#set-window-option -g window-status-fg default
#set-window-option -g window-status-bg default
#
## active window title colors
#set-window-option -g window-status-current-fg red
#set-window-option -g window-status-current-bg default
#
##set-window-option -g window-active-style bg=terminal
##set-window-option -g window-style bg=black
#####

##! pane style
#setw -g pane-base-index 0
#set -g pane-active-border-style bg=black,fg=red
#set -g pane-border-style bg=black,fg=grey
##setw -g pane-border-status bottom
#setw -g pane-border-status off
#setw -g pane-border-format '#{pane_current_command} | #{pane_tty} | #{pane_current_path}'
#set -g history-limit 9999



##
##! key connection
##

unbind C-b
unbind C-p
unbind C-n
unbind C-w
unbind C-W

##! set prefix
set -g prefix M-a
set -sg escape-time 10

##! configuration file reload
bind -n M-R source-file ~/.tmux.conf \; display-message "Configuration reload"

##! scrolling
bind -n M-S copy-mode \; display-message "Scrolling"

##! window create
bind -n M-N new-window \; display "create new window."

##! window switch
bind -n M-H previous-window
bind -n M-L next-window

##! window swap
bind -n M-J swap-window -d -t :-1  # swap current and left window
bind -n M-K swap-window -d -t :+1  # swap current and right window

##! split window to pane
bind -n C-M-v split-window -h
bind -n C-M-h split-window -v

##! select pane
bind -n M-k select-pane -U \; display "movo to up."
bind -n M-j select-pane -D \; display "movo to down."
bind -n M-h select-pane -L \; display "move to left."
bind -n M-l select-pane -R \; display "movo to right."

##! resize window and pane
bind -n M-Up    resize-pane -U 1 \; display "resize-pane. -U"
bind -n M-Down  resize-pane -D 1 \; display "resize-pane. -D"
bind -n M-Left  resize-pane -L 1 \; display "resize-pane. -L"
bind -n M-Right resize-pane -R 1 \; display "resize-pane. -R"

##! session detach
#bind -n C-M-D detach






##! on/off mouse
#bind -T prefix -n 3 run-shell "bash ~/.var/dots/bin/toggle-tmux-mouse.sh"
#bind -T prefix -n m { 
#  run-shell "bash ~/.var/dots/bin/toggle-tmux-mouse.sh"
#}

##! mouse right button click
#bind -T root -n MouseDown3Pane {
#  display "BindLeft"
#}

##! Shift+mouse left button click
#bind -T root -n S-MouseDown1Pane {
#  display-menu -T "Shift+MouseDown1Pane" \
#	"run matrix" 1 {
#	  display-popup "cmatrix"
#	  display-message "run cmatrix"
#	} \
#	"run bash" 2 {
#	  display-popup "bash"
#	} \
#	"extend display-time" 3 {
#	  set -g display-time 4000
#	} \
#	"test command" 4 {
#	  run-shell -t "echo 1"
#	} \
#	"run cacafire" 5 {
#	  display-popup "cacafire"
#	  display-message "run cacafire"
#	}
#}

##! mouse left click on status bar
#bind -T root -n MouseDown1StatusDefault {
#  display-popup "echo status bar clicked!"  
#}


##! true color support
# 256 color(from ver 2.1)
set -g default-terminal "screen-256color"
# 24 bit color(from ver 3.0)
#set -sa terminal-overrides ",xterm*:Tc"
#set -gw xterm-keys on


##! reopen configuration file
#bind -T prefix r {
#  display-popup -E "\
#	cd ~/.var/dots/; \
#	git pull; \
#	echo 'dots repository was updated!'; \
#	git pull; \
#	git submodule update --recursive --remote; \
#	echo 'all git repository updated!'; \
#	tmux source-file ~/.tmux.conf; \
#	echo '~/.tmux.conf was reloaded!'; \
#	echo 'Configuration reload<C-c>'; \
#	sleep 1; \
#  "
#}


##! test
#bind -T root -n M-r {
#  display-popup "\
#	bash
#  "
#}

#bind -T root -n M-m {
#  display-menu -T "small menus" \
#	"run matrix" 1 {
#	  display-popup -xC -yC -w80% -h30% -E "cmatrix"
#	  display-message "run cmatrix"
#	} \
#	"run cacafire" 5 {
#	  display-popup "cacafire"
#	  display-message "run cacafire"
#	}
#}


##! tree select
#bind -T root -n C-t { 
#  choose-tree -Zs
#  display "choose tree."
#  resize-window -A
#}

##! aggressive size change
set-window-option -g aggressive-resize

##! resize-window
#bind -T root -n C-w { 
#  resize-window -A
#  refresh-client -S
#  set -g status off
#  set -g status 2
#  display "resize and refresh window.(change window size)"
#}
##! resize-window
#bind -T root -n C-S-r { 
#  resize-window -A
#  refresh-client -S 
#  display "resize and refresh window.(change window size)"
#}



##! copy-paste mode
## enter to copy mode
#bind-key -T prefix -n v copy-mode
#bind-key -T copy-mode-vi v send-keys -X begin-selection
#bind-key -T copy-mode-vi y send-keys -X copy-selection \; display "yank(copy)"
#bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
## paste
#bind-key -T prefix -n p paste-buffer
## buffer
#bind-key -T prefix -n l list-buffers
